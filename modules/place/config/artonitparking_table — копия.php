<?php defined('SYSPATH') or die('No direct script access.');
 
return array(
	'HL_EVENTCODE'=>array('CREATE TABLE HL_EVENTCODE (
					ID     INTEGER NOT NULL,
					NAME   VARCHAR(255) NOT NULL,
					COLOR  INTEGER)',
					'ALTER TABLE HL_EVENTCODE ADD CONSTRAINT PK_HL_EVENTCODE PRIMARY KEY (ID);',
					'INSERT INTO HL_EVENTCODE (ID, NAME, COLOR) VALUES (1, \'Въезд на парковку\', NULL);',
					'INSERT INTO HL_EVENTCODE (ID, NAME, COLOR) VALUES (2, \'Выезд с парковки\', NULL);',
					'INSERT INTO HL_EVENTCODE (ID, NAME, COLOR) VALUES (46, \'Неизвестный ГРЗ\', NULL);',
					'INSERT INTO HL_EVENTCODE (ID, NAME, COLOR) VALUES (65, \'Проезд запрещен\', 16711680);',
					'INSERT INTO HL_EVENTCODE (ID, NAME, COLOR) VALUES (13, \'Получен ГРЗ\', NULL);',
					'INSERT INTO HL_EVENTCODE (ID, NAME, COLOR) VALUES (50, \'Проезд разрешен\', 5898050);',
					'INSERT INTO HL_EVENTCODE (ID, NAME, COLOR) VALUES (51, \'Система распознавания ГРЗ работает нормально\', NULL);',
					'INSERT INTO HL_EVENTCODE (ID, NAME, COLOR) VALUES (52, \'Ошибка системы распознавания ГРЗ\', NULL);',
					'INSERT INTO HL_EVENTCODE (ID, NAME, COLOR) VALUES (61, \'Восстановлено подключение к базе данных\', NULL);',
					'INSERT INTO HL_EVENTCODE (ID, NAME, COLOR) VALUES (91, \'ПО запущено\', NULL);',
					'INSERT INTO HL_EVENTCODE (ID, NAME, COLOR) VALUES (92, \'ПО остановлено\', NULL);',
					'INSERT INTO HL_EVENTCODE (ID, NAME, COLOR) VALUES (3, \'Отметка о выезде поставлена оператором\', NULL);',
					'INSERT INTO HL_EVENTCODE (ID, NAME, COLOR) VALUES (4, \'Отметка о въезде поставлена оператором\', NULL);',
					'INSERT INTO HL_EVENTCODE (ID, NAME, COLOR) VALUES (81, \'Проезд запрещен. Нет свободных мест в гараже\', 65535);',
					'INSERT INTO HL_EVENTCODE (ID, NAME, COLOR) VALUES (5, \'Грз не распознан, въезд открыт оператором\', 65535);',
					'INSERT INTO HL_EVENTCODE (ID, NAME, COLOR) VALUES (6, \'Повторный въезд на парковку\', 65535);',
					),
	'HL_EVENTS'=>array(
			'CREATE GENERATOR GEN_HL_EVENTS_ID',
			'CREATE TABLE HL_EVENTS (
					ID          INTEGER NOT NULL,
					EVENT_CODE  INTEGER NOT NULL,
					EVENT_TIME  TIMESTAMP DEFAULT \'Now\' NOT NULL,
					IS_ENTER    INTEGER,
					RUBI_CARD   VARCHAR(10),
					PARK_CARD   VARCHAR(10),
					GRZ         VARCHAR(12),
					COMMENT     VARCHAR(255),
					PHOTO       BLOB SUB_TYPE 0 SEGMENT SIZE 80,
					ID_PEP      INTEGER,
					ID_GATE     INTEGER,
					CREATED     TIMESTAMP DEFAULT \'now\'
				)',
				'ALTER TABLE HL_EVENTS ADD CONSTRAINT PK_HL_EVENTS PRIMARY KEY (ID);',
				'ALTER TABLE HL_EVENTS ADD CONSTRAINT FK_HL_EVENTS_1 FOREIGN KEY (EVENT_CODE) REFERENCES HL_EVENTCODE (ID) ON DELETE CASCADE',
				'CREATE TRIGGER HL_EVENTS_BI FOR HL_EVENTS
					ACTIVE BEFORE INSERT POSITION 0
					AS
					BEGIN
					  IF (NEW.ID IS NULL) THEN
						NEW.ID = GEN_ID(GEN_HL_EVENTS_ID,1);
					END',
				'GRANT INSERT ON HL_EVENTS TO PROCEDURE REGISTERPASS_HL_2'
				),
				
		'HL_ORGACCESS'=>array(
			
				'ALTER TABLE ORGANIZATION ADD CONSTRAINT UNQ1_ORGANIZATION UNIQUE (ID_ORG);',
				'CREATE GENERATOR GEN_HL_ORGACCESS_ID;',

				'CREATE TABLE HL_ORGACCESS (
					ID         INTEGER NOT NULL,
					ID_ORG     INTEGER,
					ID_GARAGE  INTEGER,
					IS_ACTIVE  INTEGER DEFAULT 1,
					CREATED    TIMESTAMP DEFAULT \'no\'
				);',
				
				'ALTER TABLE HL_ORGACCESS ADD CONSTRAINT PK_HL_ORGACCESS PRIMARY KEY (ID);',
				'ALTER TABLE HL_ORGACCESS ADD CONSTRAINT FK_HL_ORGACCESS_1 FOREIGN KEY (ID_GARAGE) REFERENCES HL_GARAGENAME (ID) ON DELETE CASCADE;',
				'ALTER TABLE HL_ORGACCESS ADD CONSTRAINT FK_HL_ORGACCESS_2 FOREIGN KEY (ID_ORG) REFERENCES ORGANIZATION (ID_ORG) ON DELETE CASCADE;',
				'CREATE TRIGGER HL_ORGACCESS_BI FOR HL_ORGACCESS
						ACTIVE BEFORE INSERT POSITION 0
						as
						begin
						  if (new.id is null) then
							new.id = gen_id(gen_hl_orgaccess_id,1);
						end;',

				'GRANT SELECT ON HL_ORGACCESS TO PROCEDURE VALIDATEPASS_HL_PARKING_2;',
				'GRANT SELECT ON HL_ORGACCESS TO PROCEDURE VALIDATEPASS_HL_PARKING_3;'
				),
				
		'HL_GARAGENAME'=>array(
			

				'CREATE GENERATOR GEN_HL_GARAGENAME_ID;',

				'CREATE TABLE HL_GARAGENAME (
					ID         INTEGER NOT NULL,
					NAME       STR_250,
					CREATED    TIMESTAMP DEFAULT \'now\',
					NOT_COUNT  INTEGER DEFAULT 0,
					DIV_CODE   STR_50 NOT NULL
				);',
				'ALTER TABLE HL_GARAGENAME ADD CONSTRAINT UNQ1_HL_GARAGENAME UNIQUE (DIV_CODE);',
				'ALTER TABLE HL_GARAGENAME ADD CONSTRAINT PK_HL_GARAGENAME PRIMARY KEY (ID);',
				'CREATE TRIGGER HL_GARAGENAME_BI FOR HL_GARAGENAME
						ACTIVE BEFORE INSERT POSITION 0
						AS
						BEGIN
						  IF (NEW.ID IS NULL) THEN
							NEW.ID = GEN_ID(GEN_HL_GARAGENAME_ID,1);
						   if (new.div_code is null) then
						   new.div_code=\'garage_\'||new.id  ;
						END',
				),
	
		'HL_GARAGE'=>array(
			'CREATE GENERATOR GEN_HL_GARAGE_ID;',

					'CREATE TABLE HL_GARAGE (
						ID             INTEGER NOT NULL,
						CREATED        TIMESTAMP DEFAULT \'now\',
						ID_PLACE       INTEGER,
						ID_GARAGENAME  INTEGER
					);',

					'ALTER TABLE HL_GARAGE ADD CONSTRAINT UNQ1_HL_GARAGE UNIQUE (ID_PLACE);',

					'ALTER TABLE HL_GARAGE ADD CONSTRAINT PK_HL_GARAGE PRIMARY KEY (ID);',

					'ALTER TABLE HL_GARAGE ADD CONSTRAINT FK_HL_GARAGE_1 FOREIGN KEY (ID_GARAGENAME) REFERENCES HL_GARAGENAME (ID) ON DELETE CASCADE;',
					'ALTER TABLE HL_GARAGE ADD CONSTRAINT FK_HL_GARAGE_2 FOREIGN KEY (ID_PLACE) REFERENCES HL_PLACE (ID) ON DELETE CASCADE;',

				
					'CREATE TRIGGER HL_GARAGE_BI FOR HL_GARAGE
					ACTIVE BEFORE INSERT POSITION 0
					AS
					BEGIN
					  IF (NEW.ID IS NULL) THEN
						NEW.ID = GEN_ID(GEN_HL_GARAGE_ID,1);
					END',
					'GRANT SELECT ON HL_GARAGE TO PROCEDURE VALIDATEPASS_HL_PARKING_2;',
					'GRANT SELECT ON HL_GARAGE TO PROCEDURE VALIDATEPASS_HL_PARKING_3;',
				
				),
	
		'HL_PARAM'=>array(
				'CREATE GENERATOR GEN_HL_PARAM_ID;',

				'CREATE TABLE HL_PARAM (
					ID          INTEGER NOT NULL,
					TABLO_IP    STR_50 /* STR_50 = VARCHAR(50) */,
					TABLO_PORT  INTEGER,
					BOX_IP      STR_50 /* STR_50 = VARCHAR(50) */,
					BOX_PORT    INTEGER,
					ID_GATE     INTEGER,
					ID_CAM      INTEGER,
					ID_DEV      INTEGER,
					MODE        INTEGER DEFAULT  0,
					NAME        STR_250 /* STR_250 = VARCHAR(250) */,
					ID_PARKING  INTEGER,
					IS_ENTER    INTEGER DEFAULT 1,
					CREATED     TIMESTAMP DEFAULT \'now\'
				);',

					'ALTER TABLE HL_PARAM ADD CONSTRAINT PK_HL_PARAM PRIMARY KEY (ID);',

					'ALTER TABLE HL_PARAM ADD CONSTRAINT FK_HL_PARAM_1 FOREIGN KEY (ID_PARKING) REFERENCES HL_PARKING (ID) ON DELETE SET NULL;',


					'CREATE TRIGGER HL_PARAM_BI FOR HL_PARAM
					ACTIVE BEFORE INSERT POSITION 0
					as
					begin
					  if (new.id is null) then
						new.id = gen_id(gen_hl_param_id,1);
					end',
					'GRANT SELECT ON HL_PARAM TO PROCEDURE VALIDATEPASS_HL_PARKING_2;',
					'GRANT SELECT ON HL_PARAM TO PROCEDURE VALIDATEPASS_HL_PARKING_3;',
									
				),
	
		'HL_COUNTERS'=>array(
				'CREATE GENERATOR GEN_HL_COUNTERS_ID;',

					'CREATE TABLE HL_COUNTERS (
						ID             INTEGER NOT NULL,
						PARKINGNUMBER  INTEGER,
						ID_ORG         INTEGER,
						NAME           VARCHAR(128) NOT NULL,
						MAXCOUNT       INTEGER,
						ID_DB          INTEGER DEFAULT 1 NOT NULL,
						"POSITION"     INTEGER DEFAULT 1,
						CREATED        TIMESTAMP DEFAULT \'now\'
					);',
						'ALTER TABLE HL_COUNTERS ADD CONSTRAINT PK_HL_COUNTERS PRIMARY KEY (ID);',
						'ALTER TABLE HL_COUNTERS ADD CONSTRAINT FK_HL_COUNTERS_1 FOREIGN KEY (PARKINGNUMBER) REFERENCES HL_PARKING (ID) ON DELETE CASCADE;',
						'CREATE TRIGGER HL_COUNTERS_BI FOR HL_COUNTERS
					ACTIVE BEFORE INSERT POSITION 0
					as
					begin
					  if (new.id is null) then
						new.id = gen_id(gen_HL_COUNTERS_id,1);
					end',
					'GRANT SELECT ON HL_COUNTERS TO PROCEDURE VALIDATEPASS_HL_PARKING;',


				
				),
	
		'HL_PARKING'=>array(
				'CREATE GENERATOR GEN_HL_PARKING_ID;',

			'CREATE TABLE HL_PARKING (
				ID        INTEGER NOT NULL,
				NAME      STR_50 NOT NULL /* STR_50 = VARCHAR(50) */,
				ENABLED   INTEGER DEFAULT 1 NOT NULL,
				CREATED   TIMESTAMP DEFAULT \'now\',
				MAXCOUNT  INTEGER,
				PARENT    INTEGER
			);',
			'ALTER TABLE HL_PARKING ADD CONSTRAINT PK_HL_PARKING PRIMARY KEY (ID);',
			'CREATE TRIGGER HL_PARKING_BI FOR HL_PARKING
			ACTIVE BEFORE INSERT POSITION 0
			as
			begin
			  if (new.id is null) then
				new.id = gen_id(gen_hl_parking_id,1);
			end',
			'DESCRIBE FIELD PARENT TABLE HL_PARKING
			\'Родительская парковка\';',
							
				),
	
		'HL_PLACE'=>array(
			
			'CREATE GENERATOR GEN_HL_PLACE_ID;',

			'CREATE TABLE HL_PLACE (
				ID           INTEGER NOT NULL,
				PLACENUMBER  INTEGER,
				ID_COUNTERS  INTEGER,
				DESCRIPTION  STR_250 /* STR_250 = VARCHAR(250) */,
				NOTE         STR_250 /* STR_250 = VARCHAR(250) */,
				STATUS       INTEGER,
				NAME         STR_100 /* STR_100 = VARCHAR(100) */,
				ID_PARKING   INTEGER,
				CREATED      TIMESTAMP DEFAULT \'now\'
			);',
			'ALTER TABLE HL_PLACE ADD CONSTRAINT UNQ1_HL_PLACE UNIQUE (PLACENUMBER);',
			'ALTER TABLE HL_PLACE ADD CONSTRAINT PK_HL_PLACE PRIMARY KEY (ID);',
			'ALTER TABLE HL_PLACE ADD CONSTRAINT FK_HL_PLACE_1 FOREIGN KEY (ID_PARKING) REFERENCES HL_PARKING (ID);',
			'CREATE INDEX HL_PLACE_IDX1 ON HL_PLACE (ID_PARKING);',
			'CREATE TRIGGER HL_PLACE_BI FOR HL_PLACE
				ACTIVE BEFORE INSERT POSITION 0
				AS
				BEGIN
				  IF (NEW.ID IS NULL) THEN
					NEW.ID = GEN_ID(GEN_HL_PLACE_ID,1);
				END',
			'GRANT SELECT ON HL_PLACE TO PROCEDURE VALIDATEPASS_HL_PARKING_3;',
				
				),
	'HL_INSIDE'=>array(
			'CREATE TABLE HL_INSIDE (
					ENTERTIME  TIMESTAMP DEFAULT \'now\' NOT NULL,
					ID_CARD    VARCHAR(32) NOT NULL,
					COUNTERID  INTEGER NOT NULL
				);',

				'ALTER TABLE HL_INSIDE ADD CONSTRAINT PK_HL_INSIDE PRIMARY KEY (ID_CARD);',
				'GRANT SELECT ON HL_INSIDE TO PROCEDURE VALIDATEPASS_HL_PARKING;',
				'GRANT SELECT ON HL_INSIDE TO PROCEDURE VALIDATEPASS_HL_PARKING_2;',

				
				),
	
	'HL_MESSAGES'=>array(
			'CREATE TABLE HL_MESSAGES (
				ID           INTEGER,
				EVENTCODE    INTEGER,
				TEXT         VARCHAR(250),
				PARAM        VARCHAR(250),
				"TIMESTAMP"  TIMESTAMP DEFAULT \'now\',
				SMALNAME     VARCHAR(10)
			);',

				
				),
	'HL_SETTING'=>array(
			'CREATE TABLE HL_SETTING (
				NAME         STR_50 NOT NULL /* STR_50 = VARCHAR(50) */,
				VALUE_STR    STR_100 /* STR_100 = VARCHAR(100) */,
				VALUE_INT    INTEGER,
				"DESCRIBE"   STR_250 /* STR_250 = VARCHAR(250) */,
				"TIMESTAMP"  TIMESTAMP DEFAULT \'now\',
				SMALLNAME    STR_50 /* STR_50 = VARCHAR(50) */
			);',
			'ALTER TABLE HL_SETTING ADD CONSTRAINT PK_HL_SETTING PRIMARY KEY (NAME);',
			'GRANT SELECT ON HL_SETTING TO PROCEDURE VALIDATEPASS_HL_PARKING_2;',

				
				),
	
	
	'HL_UPDATE_GARAGE_NAME'=>array(
	
'CREATE PROCEDURE HL_UPDATE_GARAGE_NAME (
PLACENUM INTEGER,
NAME_GARAGE VARCHAR(250))
AS
DECLARE VARIABLE ID_GARAGENAME INTEGER;
begin
select hlg.ID_GARAGENAME from hl_garage hlg 
where hlg.id_place = :PLACENUM
into :ID_GARAGENAME;
			update hl_garagename hlgn set hlgn.name= :NAME_GARAGE
			where hlgn.id= :ID_GARAGENAME;
			  suspend;
			end',
			'GRANT SELECT ON HL_GARAGE TO PROCEDURE HL_UPDATE_GARAGE_NAME;',

			'GRANT SELECT,UPDATE ON HL_GARAGENAME TO PROCEDURE HL_UPDATE_GARAGE_NAME;',

			'GRANT EXECUTE ON PROCEDURE HL_UPDATE_GARAGE_NAME TO SYSDBA;',
		),
	
	
	
				
	
);